"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[4614],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,k=c["".concat(p,".").concat(m)]||c[m]||s[m]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},889:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return s}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),l=["components"],o={},p=void 0,u={unversionedId:"smart-contracts/plugin/PluginRepo",id:"smart-contracts/plugin/PluginRepo",title:"PluginRepo",description:"Aragon Core",source:"@site/docs/smart-contracts/plugin/PluginRepo.md",sourceDirName:"smart-contracts/plugin",slug:"/smart-contracts/plugin/PluginRepo",permalink:"/docs/smart-contracts/plugin/PluginRepo",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/plugin/PluginRepo.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PluginFactoryBase",permalink:"/docs/smart-contracts/plugin/PluginFactoryBase"},next:{title:"AragonPluginRegistry",permalink:"/docs/smart-contracts/registry/AragonPluginRegistry"}},d={},s=[{value:"Aragon Core",id:"aragon-core",level:2},{value:"contract <code>PluginRepo</code>",id:"contract-pluginrepo",level:3},{value:"public struct <code>Version</code>",id:"public-struct-version",level:4},{value:"public variable <code>CREATE_VERSION_PERMISSION_ID</code>",id:"public-variable-create_version_permission_id",level:4},{value:"public variable <code>UPGRADE_PERMISSION_ID</code>",id:"public-variable-upgrade_permission_id",level:4},{value:"internal variable <code>nextVersionIndex</code>",id:"internal-variable-nextversionindex",level:4},{value:"internal variable <code>versions</code>",id:"internal-variable-versions",level:4},{value:"internal variable <code>versionIndexForSemantic</code>",id:"internal-variable-versionindexforsemantic",level:4},{value:"internal variable <code>versionIndexForPluginFactory</code>",id:"internal-variable-versionindexforpluginfactory",level:4},{value:"error <code>InvalidBump</code>",id:"error-invalidbump",level:4},{value:"error <code>InvalidContractAddressForMajorBump</code>",id:"error-invalidcontractaddressformajorbump",level:4},{value:"error <code>VersionIndexDoesNotExist</code>",id:"error-versionindexdoesnotexist",level:4},{value:"error <code>InvalidPluginFactoryInterface</code>",id:"error-invalidpluginfactoryinterface",level:4},{value:"error <code>InvalidPluginFactoryContract</code>",id:"error-invalidpluginfactorycontract",level:4},{value:"error <code>InvalidContractAddress</code>",id:"error-invalidcontractaddress",level:4},{value:"event <code>VersionCreated</code>",id:"event-versioncreated",level:4},{value:"external function <code>initialize</code>",id:"external-function-initialize",level:4},{value:"external function <code>createVersion</code>",id:"external-function-createversion",level:4},{value:"public function <code>getLatestVersion</code>",id:"public-function-getlatestversion",level:4},{value:"public function <code>getVersionByPluginFactory</code>",id:"public-function-getversionbypluginfactory",level:4},{value:"public function <code>getVersionBySemanticVersion</code>",id:"public-function-getversionbysemanticversion",level:4},{value:"public function <code>getVersionById</code>",id:"public-function-getversionbyid",level:4},{value:"public function <code>getVersionCount</code>",id:"public-function-getversioncount",level:4},{value:"public function <code>isValidBump</code>",id:"public-function-isvalidbump",level:4},{value:"internal function <code>semanticVersionHash</code>",id:"internal-function-semanticversionhash",level:4},{value:"internal function <code>_authorizeUpgrade</code>",id:"internal-function-_authorizeupgrade",level:4}],c={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"aragon-core"},"Aragon Core"),(0,i.kt)("h3",{id:"contract-pluginrepo"},"contract ",(0,i.kt)("inlineCode",{parentName:"h3"},"PluginRepo")),(0,i.kt)("p",null,"The repository contract required for managing and publishing different plugin versions within the Aragon DAO framework following the ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/"},"Semantic Versioning 2.0.0")," convention."),(0,i.kt)("h4",{id:"public-struct-version"},"public struct ",(0,i.kt)("inlineCode",{parentName:"h4"},"Version")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Version {\n  uint16[3] semanticVersion;\n  address pluginFactory;\n  bytes contentURI;\n}\n")),(0,i.kt)("h4",{id:"public-variable-create_version_permission_id"},"public variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"CREATE_VERSION_PERMISSION_ID")),(0,i.kt)("p",null,"The ID of the permission required to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"createVersion")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 CREATE_VERSION_PERMISSION_ID \n")),(0,i.kt)("h4",{id:"public-variable-upgrade_permission_id"},"public variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"UPGRADE_PERMISSION_ID")),(0,i.kt)("p",null,"The ID of the permission required to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"createVersion")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADE_PERMISSION_ID \n")),(0,i.kt)("h4",{id:"internal-variable-nextversionindex"},"internal variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"nextVersionIndex")),(0,i.kt)("p",null,"The index of the next version to be created."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"uint256 nextVersionIndex \n")),(0,i.kt)("h4",{id:"internal-variable-versions"},"internal variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"versions")),(0,i.kt)("p",null,"The mapping between version indices and version information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(uint256 => struct PluginRepo.Version) versions \n")),(0,i.kt)("h4",{id:"internal-variable-versionindexforsemantic"},"internal variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"versionIndexForSemantic")),(0,i.kt)("p",null,"A mapping between the semantic version number hash and the version index."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(bytes32 => uint256) versionIndexForSemantic \n")),(0,i.kt)("h4",{id:"internal-variable-versionindexforpluginfactory"},"internal variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"versionIndexForPluginFactory")),(0,i.kt)("p",null,"A mapping between the ",(0,i.kt)("inlineCode",{parentName:"p"},"PluginFactory")," contract addresses and the version index."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => uint256) versionIndexForPluginFactory \n")),(0,i.kt)("h4",{id:"error-invalidbump"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"InvalidBump")),(0,i.kt)("p",null,"Thrown if a semantic version number bump is invalid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidBump(uint16[3] currentVersion, uint16[3] nextVersion) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"currentVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The current semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"nextVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The next semantic version number.")))),(0,i.kt)("h4",{id:"error-invalidcontractaddressformajorbump"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"InvalidContractAddressForMajorBump")),(0,i.kt)("p",null,"Thrown if the contract does not change on a major version bump."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidContractAddressForMajorBump() \n")),(0,i.kt)("h4",{id:"error-versionindexdoesnotexist"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"VersionIndexDoesNotExist")),(0,i.kt)("p",null,"Thrown if version does not exist."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error VersionIndexDoesNotExist(uint256 versionIndex) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"versionIndex"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"The index of the version.")))),(0,i.kt)("h4",{id:"error-invalidpluginfactoryinterface"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"InvalidPluginFactoryInterface")),(0,i.kt)("p",null,"Thrown if a contract does not inherit from ",(0,i.kt)("inlineCode",{parentName:"p"},"PluginFactoryBase"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidPluginFactoryInterface(address invalidPluginFactory) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"invalidPluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract missing the ",(0,i.kt)("inlineCode",{parentName:"td"},"PluginFactoryBase")," interface.")))),(0,i.kt)("h4",{id:"error-invalidpluginfactorycontract"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"InvalidPluginFactoryContract")),(0,i.kt)("p",null,"Thrown if a contract is not a ",(0,i.kt)("inlineCode",{parentName:"p"},"PluginFactory")," contract."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidPluginFactoryContract(address invalidPluginFactory) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"invalidPluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract not being a plugin factory.")))),(0,i.kt)("h4",{id:"error-invalidcontractaddress"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"InvalidContractAddress")),(0,i.kt)("p",null,"Thrown if address is not a contract."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error InvalidContractAddress(address invalidContract) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"invalidContract"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address not being a contract.")))),(0,i.kt)("h4",{id:"event-versioncreated"},"event ",(0,i.kt)("inlineCode",{parentName:"h4"},"VersionCreated")),(0,i.kt)("p",null,"Emitted when a new version is created."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"event VersionCreated(uint256 versionId, uint16[3] semanticVersion) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"versionId"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"The version index.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")))),(0,i.kt)("h4",{id:"external-function-initialize"},"external function ",(0,i.kt)("inlineCode",{parentName:"h4"},"initialize")),(0,i.kt)("p",null,"Initializes the contract by"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"registering the ",(0,i.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165")," interface ID"),(0,i.kt)("li",{parentName:"ul"},"initializing the permission manager"),(0,i.kt)("li",{parentName:"ul"},"setting the next version index to 1 and"),(0,i.kt)("li",{parentName:"ul"},"giving the ",(0,i.kt)("inlineCode",{parentName:"li"},"CREATE_VERSION_PERMISSION_ID")," permission to the initial owner.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function initialize(address initialOwner) external \n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This method is required to support ",(0,i.kt)("a",{parentName:"em",href:"https://eips.ethereum.org/EIPS/eip-1822"},"ERC-1822"),".")),(0,i.kt)("h4",{id:"external-function-createversion"},"external function ",(0,i.kt)("inlineCode",{parentName:"h4"},"createVersion")),(0,i.kt)("p",null,"Create new version with contract ",(0,i.kt)("inlineCode",{parentName:"p"},"_pluginFactoryAddress")," and content ",(0,i.kt)("inlineCode",{parentName:"p"},"@fromHex(_contentURI)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function createVersion(uint16[3] _newSemanticVersion, address _pluginFactory, bytes _contentURI) external \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_newSemanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"Semantic version for new pluginRepo version")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_pluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_contentURI"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"External URI where the plugin metadata and subsequent resources can be fetched from")))),(0,i.kt)("h4",{id:"public-function-getlatestversion"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"getLatestVersion")),(0,i.kt)("p",null,"Gets the version information of the latest version."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getLatestVersion() public view returns (uint16[3] semanticVersion, address pluginFactory, bytes contentURI) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the plugin factory associated with the version.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"contentURI"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"The external URI pointing to the content of the version.")))),(0,i.kt)("h4",{id:"public-function-getversionbypluginfactory"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"getVersionByPluginFactory")),(0,i.kt)("p",null,"Gets the version information associated with a plugin factory address."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVersionByPluginFactory(address _pluginFactory) public view returns (uint16[3] semanticVersion, address pluginFactory, bytes contentURI) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the plugin factory associated with the version.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"contentURI"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"The external URI pointing to the content of the version.")))),(0,i.kt)("h4",{id:"public-function-getversionbysemanticversion"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"getVersionBySemanticVersion")),(0,i.kt)("p",null,"Gets the version information associated with a semantic version number."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVersionBySemanticVersion(uint16[3] _semanticVersion) public view returns (uint16[3] semanticVersion, address pluginFactory, bytes contentURI) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the plugin factory associated with the version.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"contentURI"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"The external URI pointing to the content of the version.")))),(0,i.kt)("h4",{id:"public-function-getversionbyid"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"getVersionById")),(0,i.kt)("p",null,"Gets the version information associated with a version index."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVersionById(uint256 _versionIndex) public view returns (uint16[3] semanticVersion, address pluginFactory, bytes contentURI) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pluginFactory"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the plugin factory associated with the version.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"contentURI"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes"),(0,i.kt)("td",{parentName:"tr",align:null},"The external URI pointing to the content of the version.")))),(0,i.kt)("h4",{id:"public-function-getversioncount"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"getVersionCount")),(0,i.kt)("p",null,"Gets the total number of published versions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function getVersionCount() public view returns (uint256) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Output"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[0]"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256"),(0,i.kt)("td",{parentName:"tr",align:null},"uint256 The number of published versions.")))),(0,i.kt)("h4",{id:"public-function-isvalidbump"},"public function ",(0,i.kt)("inlineCode",{parentName:"h4"},"isValidBump")),(0,i.kt)("p",null,"Checks if a version bump is valid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidBump(uint16[3] _oldVersion, uint16[3] _newVersion) public pure returns (bool) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_oldVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The old semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_newVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The new semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},"Output")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,i.kt)("td",{parentName:"tr",align:null},"bool"),(0,i.kt)("td",{parentName:"tr",align:null},"bool True if the bump is valid.")))),(0,i.kt)("h4",{id:"internal-function-semanticversionhash"},"internal function ",(0,i.kt)("inlineCode",{parentName:"h4"},"semanticVersionHash")),(0,i.kt)("p",null,"Generates a hash from a semantic version number."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function semanticVersionHash(uint16[3] semanticVersion) internal pure returns (bytes32) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"semanticVersion"),(0,i.kt)("td",{parentName:"tr",align:null},"uint16","[3]"),(0,i.kt)("td",{parentName:"tr",align:null},"The semantic version number.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},"Output")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes32 The hash of the semantic version number.")))),(0,i.kt)("h4",{id:"internal-function-_authorizeupgrade"},"internal function ",(0,i.kt)("inlineCode",{parentName:"h4"},"_authorizeUpgrade")),(0,i.kt)("p",null,"Internal method authorizing the upgrade of the contract via the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable"},"upgradeabilty mechanism for UUPS proxies")," (see ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1822"},"ERC-1822"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal virtual \n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The caller must have the ",(0,i.kt)("inlineCode",{parentName:"em"},"UPGRADE_PERMISSION_ID")," permission.")))}m.isMDXComponent=!0}}]);