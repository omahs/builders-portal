"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[3951],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return g}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(r),g=n,m=u["".concat(c,".").concat(g)]||u[g]||s[g]||i;return r?a.createElement(m,l(l({ref:t},p),{},{components:r})):a.createElement(m,l({ref:t},p))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1806:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return s}});var a=r(3117),n=r(102),i=(r(7294),r(3905)),l=["components"],o={},c=void 0,d={unversionedId:"smart-contracts/registry/InterfaceBasedRegistry",id:"smart-contracts/registry/InterfaceBasedRegistry",title:"InterfaceBasedRegistry",description:"Aragon Core",source:"@site/docs/smart-contracts/registry/InterfaceBasedRegistry.md",sourceDirName:"smart-contracts/registry",slug:"/smart-contracts/registry/InterfaceBasedRegistry",permalink:"/docs/smart-contracts/registry/InterfaceBasedRegistry",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/registry/InterfaceBasedRegistry.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DAORegistry",permalink:"/docs/smart-contracts/registry/DAORegistry"},next:{title:"ENSSubdomainRegistrar",permalink:"/docs/smart-contracts/registry/ens/ENSSubdomainRegistrar"}},p={},s=[{value:"Aragon Core",id:"aragon-core",level:2},{value:"contract <code>InterfaceBasedRegistry</code>",id:"contract-interfacebasedregistry",level:3},{value:"public variable <code>UPGRADE_PERMISSION_ID</code>",id:"public-variable-upgrade_permission_id",level:4},{value:"public variable <code>targetInterfaceId</code>",id:"public-variable-targetinterfaceid",level:4},{value:"public variable <code>entries</code>",id:"public-variable-entries",level:4},{value:"error <code>ContractAlreadyRegistered</code>",id:"error-contractalreadyregistered",level:4},{value:"error <code>ContractInterfaceInvalid</code>",id:"error-contractinterfaceinvalid",level:4},{value:"error <code>ContractAddressInvalid</code>",id:"error-contractaddressinvalid",level:4},{value:"error <code>ContractERC165SupportInvalid</code>",id:"error-contracterc165supportinvalid",level:4},{value:"internal function <code>__InterfaceBasedRegistry_init</code>",id:"internal-function-__interfacebasedregistry_init",level:4},{value:"internal function <code>_authorizeUpgrade</code>",id:"internal-function-_authorizeupgrade",level:4},{value:"internal function <code>_register</code>",id:"internal-function-_register",level:4}],u={toc:s};function g(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"aragon-core"},"Aragon Core"),(0,i.kt)("h3",{id:"contract-interfacebasedregistry"},"contract ",(0,i.kt)("inlineCode",{parentName:"h3"},"InterfaceBasedRegistry")),(0,i.kt)("p",null,"An ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165"),"-based registry for contracts"),(0,i.kt)("h4",{id:"public-variable-upgrade_permission_id"},"public variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"UPGRADE_PERMISSION_ID")),(0,i.kt)("p",null,"The ID of the permission required to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"_authorizeUpgrade")," function."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 UPGRADE_PERMISSION_ID \n")),(0,i.kt)("h4",{id:"public-variable-targetinterfaceid"},"public variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"targetInterfaceId")),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165")," interface ID that the target contracts being registered must support."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 targetInterfaceId \n")),(0,i.kt)("h4",{id:"public-variable-entries"},"public variable ",(0,i.kt)("inlineCode",{parentName:"h4"},"entries")),(0,i.kt)("p",null,"The mapping containing the registry entries returning true for registererd contract addresses."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => bool) entries \n")),(0,i.kt)("h4",{id:"error-contractalreadyregistered"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"ContractAlreadyRegistered")),(0,i.kt)("p",null,"Thrown if the contract is already registered."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error ContractAlreadyRegistered(address registrant) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"registrant"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract to be registered.")))),(0,i.kt)("h4",{id:"error-contractinterfaceinvalid"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"ContractInterfaceInvalid")),(0,i.kt)("p",null,"Thrown if the contract does not support the required interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error ContractInterfaceInvalid(address registrant) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"registrant"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract to be registered.")))),(0,i.kt)("h4",{id:"error-contractaddressinvalid"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"ContractAddressInvalid")),(0,i.kt)("p",null,"Thrown if the address is not a contract."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error ContractAddressInvalid(address registrant) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"registrant"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract to be registered.")))),(0,i.kt)("h4",{id:"error-contracterc165supportinvalid"},"error ",(0,i.kt)("inlineCode",{parentName:"h4"},"ContractERC165SupportInvalid")),(0,i.kt)("p",null,"Thrown if the contract do not support ERC165."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"error ContractERC165SupportInvalid(address registrant) \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"registrant"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of the contract.")))),(0,i.kt)("h4",{id:"internal-function-__interfacebasedregistry_init"},"internal function ",(0,i.kt)("inlineCode",{parentName:"h4"},"__InterfaceBasedRegistry_init")),(0,i.kt)("p",null,"Initializes the component."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function __InterfaceBasedRegistry_init(contract IDAO _managingDao, bytes4 _targetInterfaceId) internal virtual \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_managingDao"),(0,i.kt)("td",{parentName:"tr",align:null},"contract IDAO"),(0,i.kt)("td",{parentName:"tr",align:null},"The interface of the DAO managing the components permissions.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"_targetInterfaceId"),(0,i.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,i.kt)("td",{parentName:"tr",align:null},"The ",(0,i.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165")," interface id of the contracts to be registered.")))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This is required for the UUPS upgradability pattern.")),(0,i.kt)("h4",{id:"internal-function-_authorizeupgrade"},"internal function ",(0,i.kt)("inlineCode",{parentName:"h4"},"_authorizeUpgrade")),(0,i.kt)("p",null,"Internal method authorizing the upgrade of the contract via the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.openzeppelin.com/contracts/4.x/api/proxy#UUPSUpgradeable"},"upgradeabilty mechanism for UUPS proxies")," (see ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-1822"},"ERC-1822"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _authorizeUpgrade(address) internal virtual \n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The caller must have the ",(0,i.kt)("inlineCode",{parentName:"em"},"UPGRADE_PERMISSION_ID")," permission.")),(0,i.kt)("h4",{id:"internal-function-_register"},"internal function ",(0,i.kt)("inlineCode",{parentName:"h4"},"_register")),(0,i.kt)("p",null,"Register an ",(0,i.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165")," contract address."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-solidity"},"function _register(address registrant) internal \n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"registrant"),(0,i.kt)("td",{parentName:"tr",align:null},"address"),(0,i.kt)("td",{parentName:"tr",align:null},"The address of an ",(0,i.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC-165")," contract.")))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"The managing DAO needs to grant REGISTER_PERMISSION_ID to registrar.")))}g.isMDXComponent=!0}}]);