"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[1004],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return k}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),m=p(a),k=r,c=m["".concat(o,".").concat(k)]||m[k]||u[k]||l;return a?n.createElement(c,i(i({ref:e},s),{},{components:a})):n.createElement(c,i({ref:e},s))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=m;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1265:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return u}});var n=a(3117),r=a(102),l=(a(7294),a(3905)),i=["components"],d={},o=void 0,p={unversionedId:"smart-contracts/core/IDAO",id:"smart-contracts/core/IDAO",title:"IDAO",description:"Aragon Core",source:"@site/docs/smart-contracts/core/IDAO.md",sourceDirName:"smart-contracts/core",slug:"/smart-contracts/core/IDAO",permalink:"/docs/smart-contracts/core/IDAO",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/core/IDAO.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DAO",permalink:"/docs/smart-contracts/core/DAO"},next:{title:"Component",permalink:"/docs/smart-contracts/core/component/"}},s={},u=[{value:"Aragon Core",id:"aragon-core",level:2},{value:"contract <code>IDAO</code>",id:"contract-idao",level:3},{value:"internal variable <code>DAO_INTERFACE_ID</code>",id:"internal-variable-dao_interface_id",level:4},{value:"public struct <code>Action</code>",id:"public-struct-action",level:4},{value:"external function <code>hasPermission</code>",id:"external-function-haspermission",level:4},{value:"external function <code>setMetadata</code>",id:"external-function-setmetadata",level:4},{value:"event <code>MetadataSet</code>",id:"event-metadataset",level:4},{value:"external function <code>execute</code>",id:"external-function-execute",level:4},{value:"event <code>Executed</code>",id:"event-executed",level:4},{value:"external function <code>deposit</code>",id:"external-function-deposit",level:4},{value:"event <code>Deposited</code>",id:"event-deposited",level:4},{value:"event <code>NativeTokenDeposited</code>",id:"event-nativetokendeposited",level:4},{value:"external function <code>withdraw</code>",id:"external-function-withdraw",level:4},{value:"event <code>Withdrawn</code>",id:"event-withdrawn",level:4},{value:"external function <code>setTrustedForwarder</code>",id:"external-function-settrustedforwarder",level:4},{value:"external function <code>getTrustedForwarder</code>",id:"external-function-gettrustedforwarder",level:4},{value:"event <code>TrustedForwarderSet</code>",id:"event-trustedforwarderset",level:4},{value:"external function <code>setSignatureValidator</code>",id:"external-function-setsignaturevalidator",level:4},{value:"external function <code>isValidSignature</code>",id:"external-function-isvalidsignature",level:4}],m={toc:u};function k(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"aragon-core"},"Aragon Core"),(0,l.kt)("h3",{id:"contract-idao"},"contract ",(0,l.kt)("inlineCode",{parentName:"h3"},"IDAO")),(0,l.kt)("p",null,"The interface required for DAOs within the Aragon App DAO framework."),(0,l.kt)("h4",{id:"internal-variable-dao_interface_id"},"internal variable ",(0,l.kt)("inlineCode",{parentName:"h4"},"DAO_INTERFACE_ID")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"IDAO")," interface ID."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes4 DAO_INTERFACE_ID \n")),(0,l.kt)("h4",{id:"public-struct-action"},"public struct ",(0,l.kt)("inlineCode",{parentName:"h4"},"Action")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Action {\n  address to;\n  uint256 value;\n  bytes data;\n}\n")),(0,l.kt)("h4",{id:"external-function-haspermission"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"hasPermission")),(0,l.kt)("p",null,"Checks if an address has permission on a contract via a permission identifier and considers if ",(0,l.kt)("inlineCode",{parentName:"p"},"ANY_ADDRESS")," was used in the granting process."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function hasPermission(address _where, address _who, bytes32 _permissionID, bytes _data) external virtual returns (bool) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_where"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the contract.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_who"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of a EOA or contract to give the permissions.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_permissionID"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"The permission identifier.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_data"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"The optional data passed to the ",(0,l.kt)("inlineCode",{parentName:"td"},"PermissionOracle")," registered.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"Output")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"bool Returns true if the address has permission, false if not.")))),(0,l.kt)("h4",{id:"external-function-setmetadata"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"setMetadata")),(0,l.kt)("p",null,"Updates the DAO metadata (e.g., an IPFS hash)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setMetadata(bytes _metadata) external virtual \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"The IPFS hash of the new metadata object.")))),(0,l.kt)("h4",{id:"event-metadataset"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"MetadataSet")),(0,l.kt)("p",null,"Emitted when the DAO metadata is updated."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event MetadataSet(bytes metadata) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"The IPFS hash of the new metadata object.")))),(0,l.kt)("h4",{id:"external-function-execute"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"execute")),(0,l.kt)("p",null,"Executes a list of actions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function execute(uint256 callId, struct IDAO.Action[] _actions) external virtual returns (bytes[]) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"callId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The id of the call. The definition of the value of callId is up to the calling contract and can be used, e.g., as a nonce.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_actions"),(0,l.kt)("td",{parentName:"tr",align:null},"struct IDAO.Action[]"),(0,l.kt)("td",{parentName:"tr",align:null},"The array of actions.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"Output")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes[]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes[] The array of results obtained from the executed actions in ",(0,l.kt)("inlineCode",{parentName:"td"},"bytes"),".")))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Runs a loop through the array of actions and executes them one by one. If one action fails, all will be reverted.")),(0,l.kt)("h4",{id:"event-executed"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"Executed")),(0,l.kt)("p",null,"Emitted when a proposal is executed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Executed(address actor, uint256 callId, struct IDAO.Action[] actions, bytes[] execResults) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"actor"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the caller.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"callId"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The id of the call.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"actions"),(0,l.kt)("td",{parentName:"tr",align:null},"struct IDAO.Action[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Array of actions executed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"execResults"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Array with the results of the executed actions.")))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The value of callId is defined by the component/contract calling the execute function.\nA Component implementation can use it, for example, as a nonce.")),(0,l.kt)("h4",{id:"external-function-deposit"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"deposit")),(0,l.kt)("p",null,"Deposits (native) tokens to the DAO contract with a reference string."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function deposit(address _token, uint256 _amount, string _reference) external payable virtual \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_token"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token or address(0) in case of the native token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of tokens to deposit.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_reference"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The reference describing the deposit reason.")))),(0,l.kt)("h4",{id:"event-deposited"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"Deposited")),(0,l.kt)("p",null,"Emitted when a token deposit has been made to the DAO."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Deposited(address sender, address token, uint256 amount, string _reference) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the sender.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the deposited token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of tokens deposited.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_reference"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The reference describing the deposit reason.")))),(0,l.kt)("h4",{id:"event-nativetokendeposited"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"NativeTokenDeposited")),(0,l.kt)("p",null,"Emitted when a native token deposit has been made to the DAO."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event NativeTokenDeposited(address sender, uint256 amount) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"sender"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the sender.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of native tokens deposited.")))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"This event is intended to be emitted in the ",(0,l.kt)("inlineCode",{parentName:"em"},"receive")," function and is therefore bound by the gas limitations for ",(0,l.kt)("inlineCode",{parentName:"em"},"send"),"/",(0,l.kt)("inlineCode",{parentName:"em"},"transfer")," calls introduced by EIP-2929.")),(0,l.kt)("h4",{id:"external-function-withdraw"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"withdraw")),(0,l.kt)("p",null,"Withdraw (native) tokens from the DAO with a withdraw reference string."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function withdraw(address _token, address _to, uint256 _amount, string _reference) external virtual \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_token"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the token and address(0) in case of the native token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The target address to send (native) tokens to.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of (native) tokens to withdraw.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_reference"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The reference describing the withdrawal reason.")))),(0,l.kt)("h4",{id:"event-withdrawn"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"Withdrawn")),(0,l.kt)("p",null,"Emitted when a (native) token withdrawal has been made from the DAO."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event Withdrawn(address token, address to, uint256 amount, string _reference) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the withdrawn token or address(0) in case of the native token.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"to"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The address of the withdrawer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"amount"),(0,l.kt)("td",{parentName:"tr",align:null},"uint256"),(0,l.kt)("td",{parentName:"tr",align:null},"The amount of tokens withdrawn.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_reference"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The reference describing the withdrawal reason.")))),(0,l.kt)("h4",{id:"external-function-settrustedforwarder"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"setTrustedForwarder")),(0,l.kt)("p",null,"Setter for the trusted forwarder verifying the meta transaction."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setTrustedForwarder(address _trustedForwarder) external virtual \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_trustedForwarder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The trusted forwarder address.")))),(0,l.kt)("h4",{id:"external-function-gettrustedforwarder"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"getTrustedForwarder")),(0,l.kt)("p",null,"Getter for the trusted forwarder verifying the meta transaction."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function getTrustedForwarder() external virtual returns (address) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Output"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"The trusted forwarder address.")))),(0,l.kt)("h4",{id:"event-trustedforwarderset"},"event ",(0,l.kt)("inlineCode",{parentName:"h4"},"TrustedForwarderSet")),(0,l.kt)("p",null,"Emitted when a new TrustedForwarder is set on the DAO."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"event TrustedForwarderSet(address forwarder) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"forwarder"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"the new forwarder address.")))),(0,l.kt)("h4",{id:"external-function-setsignaturevalidator"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"setSignatureValidator")),(0,l.kt)("p",null,"Setter for the ERC1271 signature validator contract."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function setSignatureValidator(address _signatureValidator) external virtual \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_signatureValidator"),(0,l.kt)("td",{parentName:"tr",align:null},"address"),(0,l.kt)("td",{parentName:"tr",align:null},"ERC1271 SignatureValidator.")))),(0,l.kt)("h4",{id:"external-function-isvalidsignature"},"external function ",(0,l.kt)("inlineCode",{parentName:"h4"},"isValidSignature")),(0,l.kt)("p",null,"Checks whether a signature is valid for the provided data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function isValidSignature(bytes32 _hash, bytes _signature) external virtual returns (bytes4) \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes32"),(0,l.kt)("td",{parentName:"tr",align:null},"The keccak256 hash of arbitrary length data signed on the behalf of ",(0,l.kt)("inlineCode",{parentName:"td"},"address(this)"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"_signature"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Signature byte array associated with _data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},(0,l.kt)("strong",{parentName:"td"},"Output")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,l.kt)("td",{parentName:"tr",align:null},"bytes4"),(0,l.kt)("td",{parentName:"tr",align:null},"magicValue Returns the ",(0,l.kt)("inlineCode",{parentName:"td"},"bytes4")," magic value ",(0,l.kt)("inlineCode",{parentName:"td"},"0x1626ba7e")," if the signature is valid.")))))}k.isMDXComponent=!0}}]);