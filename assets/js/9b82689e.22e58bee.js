"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[6090],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=a,m=u["".concat(c,".").concat(k)]||u[k]||s[k]||o;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},173:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],l={},c=void 0,p={unversionedId:"smart-contracts/factory/TokenFactory",id:"smart-contracts/factory/TokenFactory",title:"TokenFactory",description:"Aragon Core",source:"@site/docs/smart-contracts/factory/TokenFactory.md",sourceDirName:"smart-contracts/factory",slug:"/smart-contracts/factory/TokenFactory",permalink:"/docs/smart-contracts/factory/TokenFactory",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/factory/TokenFactory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PluginRepoFactory",permalink:"/docs/smart-contracts/factory/PluginRepoFactory"},next:{title:"IPluginRepo",permalink:"/docs/smart-contracts/plugin/IPluginRepo"}},d={},s=[{value:"Aragon Core",id:"aragon-core",level:2},{value:"contract <code>TokenFactory</code>",id:"contract-tokenfactory",level:3},{value:"public variable <code>governanceERC20Base</code>",id:"public-variable-governanceerc20base",level:4},{value:"public variable <code>governanceWrappedERC20Base</code>",id:"public-variable-governancewrappederc20base",level:4},{value:"public variable <code>merkleMinterBase</code>",id:"public-variable-merkleminterbase",level:4},{value:"public variable <code>distributorBase</code>",id:"public-variable-distributorbase",level:4},{value:"event <code>TokenCreated</code>",id:"event-tokencreated",level:4},{value:"public struct <code>TokenConfig</code>",id:"public-struct-tokenconfig",level:4},{value:"public struct <code>MintConfig</code>",id:"public-struct-mintconfig",level:4},{value:"public function <code>constructor</code>",id:"public-function-constructor",level:4},{value:"external function <code>createToken</code>",id:"external-function-createtoken",level:4},{value:"private function <code>setupBases</code>",id:"private-function-setupbases",level:4}],u={toc:s};function k(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"aragon-core"},"Aragon Core"),(0,o.kt)("h3",{id:"contract-tokenfactory"},"contract ",(0,o.kt)("inlineCode",{parentName:"h3"},"TokenFactory")),(0,o.kt)("p",null,"This contract creates ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," governance tokens."),(0,o.kt)("h4",{id:"public-variable-governanceerc20base"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"governanceERC20Base")),(0,o.kt)("p",null,"The address of the ",(0,o.kt)("inlineCode",{parentName:"p"},"GovernanceERC20")," base contract to clone from."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address governanceERC20Base \n")),(0,o.kt)("h4",{id:"public-variable-governancewrappederc20base"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"governanceWrappedERC20Base")),(0,o.kt)("p",null,"The address of the ",(0,o.kt)("inlineCode",{parentName:"p"},"GovernanceWrappedERC20")," base contract to clone from."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address governanceWrappedERC20Base \n")),(0,o.kt)("h4",{id:"public-variable-merkleminterbase"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"merkleMinterBase")),(0,o.kt)("p",null,"The address of the ",(0,o.kt)("inlineCode",{parentName:"p"},"MerkleMinter")," base contract to clone from."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address merkleMinterBase \n")),(0,o.kt)("h4",{id:"public-variable-distributorbase"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"distributorBase")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"MerkleDistributor")," base contract used to initialize the ",(0,o.kt)("inlineCode",{parentName:"p"},"MerkleMinter")," clones."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"contract MerkleDistributor distributorBase \n")),(0,o.kt)("h4",{id:"event-tokencreated"},"event ",(0,o.kt)("inlineCode",{parentName:"h4"},"TokenCreated")),(0,o.kt)("p",null,"Emitted when a new token is created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"event TokenCreated(contract IERC20Upgradeable token, contract MerkleMinter minter, contract MerkleDistributor distributor) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"token"),(0,o.kt)("td",{parentName:"tr",align:null},"contract IERC20Upgradeable"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," token address.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"minter"),(0,o.kt)("td",{parentName:"tr",align:null},"contract MerkleMinter"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("inlineCode",{parentName:"td"},"MerkleMinter")," contract minting the new token.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"distributor"),(0,o.kt)("td",{parentName:"tr",align:null},"contract MerkleDistributor"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("inlineCode",{parentName:"td"},"MerkleDistibutor")," contract distributing the new token.")))),(0,o.kt)("h4",{id:"public-struct-tokenconfig"},"public struct ",(0,o.kt)("inlineCode",{parentName:"h4"},"TokenConfig")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"struct TokenConfig {\n  address addr;\n  string name;\n  string symbol;\n}\n")),(0,o.kt)("h4",{id:"public-struct-mintconfig"},"public struct ",(0,o.kt)("inlineCode",{parentName:"h4"},"MintConfig")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"struct MintConfig {\n  address[] receivers;\n  uint256[] amounts;\n}\n")),(0,o.kt)("h4",{id:"public-function-constructor"},"public function ",(0,o.kt)("inlineCode",{parentName:"h4"},"constructor")),(0,o.kt)("p",null,"Initializes the different base contracts for the factory to clone from."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor() public \n")),(0,o.kt)("h4",{id:"external-function-createtoken"},"external function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createToken")),(0,o.kt)("p",null,"TODO: Worth considering the decimals ?\nCreates a new ",(0,o.kt)("inlineCode",{parentName:"p"},"GovernanceERC20")," token or a ",(0,o.kt)("inlineCode",{parentName:"p"},"GovernanceWrappedERC20")," from an existing ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," token depending on the address used in the ",(0,o.kt)("inlineCode",{parentName:"p"},"TokenConfig")," provided."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createToken(contract DAO _managingDao, struct TokenFactory.TokenConfig _tokenConfig, struct TokenFactory.MintConfig _mintConfig) external returns (contract ERC20VotesUpgradeable, contract MerkleMinter) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_managingDao"),(0,o.kt)("td",{parentName:"tr",align:null},"contract DAO"),(0,o.kt)("td",{parentName:"tr",align:null},"The address of the DAO managing the token.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_tokenConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct TokenFactory.TokenConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The token configuration struct containing the name, and symbol of the token to be create, but also an address. For ",(0,o.kt)("inlineCode",{parentName:"td"},"address(0)"),", a new governance token is created. For any other address pointing to an ",(0,o.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20"),"-compatible contract, a wrapped governance token is created.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_mintConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct TokenFactory.MintConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The token mint configuration struct containing the ",(0,o.kt)("inlineCode",{parentName:"td"},"receivers")," and ",(0,o.kt)("inlineCode",{parentName:"td"},"amounts"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Output")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"[0]"),(0,o.kt)("td",{parentName:"tr",align:null},"contract ERC20VotesUpgradeable"),(0,o.kt)("td",{parentName:"tr",align:null},"ERC20VotesUpgradeable The address of the created token.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("strong",{parentName:"td"},"Output")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"[1]"),(0,o.kt)("td",{parentName:"tr",align:null},"contract MerkleMinter"),(0,o.kt)("td",{parentName:"tr",align:null},"MerkleMinter The ",(0,o.kt)("inlineCode",{parentName:"td"},"MerkleMinter")," contract address being used to mint token address(zero address in case passed token addr was not zero)")))),(0,o.kt)("h4",{id:"private-function-setupbases"},"private function ",(0,o.kt)("inlineCode",{parentName:"h4"},"setupBases")),(0,o.kt)("p",null,"Private helper method to set up the required base contracts on TokenFactory deployment."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function setupBases() private \n")))}k.isMDXComponent=!0}}]);