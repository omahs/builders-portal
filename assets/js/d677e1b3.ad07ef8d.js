"use strict";(self.webpackChunkdev_portal=self.webpackChunkdev_portal||[]).push([[4979],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return m}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var c=n.createContext({}),d=function(t){var e=n.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=d(t.components);return n.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),u=d(a),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return a?n.createElement(g,l(l({ref:e},s),{},{components:a})):n.createElement(g,l({ref:e},s))}));function m(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,l=new Array(o);l[0]=u;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:r,l[1]=i;for(var d=2;d<o;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1648:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return p}});var n=a(3117),r=a(102),o=(a(7294),a(3905)),l=["components"],i={},c=void 0,d={unversionedId:"smart-contracts/factory/DAOFactory",id:"smart-contracts/factory/DAOFactory",title:"DAOFactory",description:"Aragon Core",source:"@site/docs/smart-contracts/factory/DAOFactory.md",sourceDirName:"smart-contracts/factory",slug:"/smart-contracts/factory/DAOFactory",permalink:"/docs/smart-contracts/factory/DAOFactory",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/smart-contracts/factory/DAOFactory.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PermissionManager",permalink:"/docs/smart-contracts/core/permission/PermissionManager"},next:{title:"PluginRepoFactory",permalink:"/docs/smart-contracts/factory/PluginRepoFactory"}},s={},p=[{value:"Aragon Core",id:"aragon-core",level:2},{value:"contract <code>DAOFactory</code>",id:"contract-daofactory",level:3},{value:"error <code>MintArrayLengthMismatch</code>",id:"error-mintarraylengthmismatch",level:4},{value:"public variable <code>erc20VotingBase</code>",id:"public-variable-erc20votingbase",level:4},{value:"public variable <code>allowlistVotingBase</code>",id:"public-variable-allowlistvotingbase",level:4},{value:"public variable <code>daoBase</code>",id:"public-variable-daobase",level:4},{value:"public variable <code>daoRegistry</code>",id:"public-variable-daoregistry",level:4},{value:"public variable <code>tokenFactory</code>",id:"public-variable-tokenfactory",level:4},{value:"public struct <code>DAOConfig</code>",id:"public-struct-daoconfig",level:4},{value:"public struct <code>VoteConfig</code>",id:"public-struct-voteconfig",level:4},{value:"event <code>DAOCreated</code>",id:"event-daocreated",level:4},{value:"public function <code>constructor</code>",id:"public-function-constructor",level:4},{value:"external function <code>createERC20VotingDAO</code>",id:"external-function-createerc20votingdao",level:4},{value:"external function <code>createAllowlistVotingDAO</code>",id:"external-function-createallowlistvotingdao",level:4},{value:"internal function <code>createDAO</code>",id:"internal-function-createdao",level:4},{value:"internal function <code>setDAOPermissions</code>",id:"internal-function-setdaopermissions",level:4},{value:"internal function <code>createERC20Voting</code>",id:"internal-function-createerc20voting",level:4},{value:"internal function <code>createAllowlistVoting</code>",id:"internal-function-createallowlistvoting",level:4},{value:"private function <code>setupBases</code>",id:"private-function-setupbases",level:4}],u={toc:p};function m(t){var e=t.components,a=(0,r.Z)(t,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"aragon-core"},"Aragon Core"),(0,o.kt)("h3",{id:"contract-daofactory"},"contract ",(0,o.kt)("inlineCode",{parentName:"h3"},"DAOFactory")),(0,o.kt)("p",null,"This contract is used to create a DAO."),(0,o.kt)("h4",{id:"error-mintarraylengthmismatch"},"error ",(0,o.kt)("inlineCode",{parentName:"h4"},"MintArrayLengthMismatch")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"error MintArrayLengthMismatch(uint256 receiversArrayLength, uint256 amountsArrayLength) \n")),(0,o.kt)("h4",{id:"public-variable-erc20votingbase"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"erc20VotingBase")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address erc20VotingBase \n")),(0,o.kt)("h4",{id:"public-variable-allowlistvotingbase"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"allowlistVotingBase")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address allowlistVotingBase \n")),(0,o.kt)("h4",{id:"public-variable-daobase"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"daoBase")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"address daoBase \n")),(0,o.kt)("h4",{id:"public-variable-daoregistry"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"daoRegistry")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"contract DAORegistry daoRegistry \n")),(0,o.kt)("h4",{id:"public-variable-tokenfactory"},"public variable ",(0,o.kt)("inlineCode",{parentName:"h4"},"tokenFactory")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"contract TokenFactory tokenFactory \n")),(0,o.kt)("h4",{id:"public-struct-daoconfig"},"public struct ",(0,o.kt)("inlineCode",{parentName:"h4"},"DAOConfig")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DAOConfig {\n  string name;\n  bytes metadata;\n}\n")),(0,o.kt)("h4",{id:"public-struct-voteconfig"},"public struct ",(0,o.kt)("inlineCode",{parentName:"h4"},"VoteConfig")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"struct VoteConfig {\n  uint64 participationRequiredPct;\n  uint64 supportRequiredPct;\n  uint64 minDuration;\n}\n")),(0,o.kt)("h4",{id:"event-daocreated"},"event ",(0,o.kt)("inlineCode",{parentName:"h4"},"DAOCreated")),(0,o.kt)("p",null,"Emitted when a new DAO is created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"event DAOCreated(string name, address token, address voting) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"name"),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"The DAO name.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"token"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," governance token address or ",(0,o.kt)("inlineCode",{parentName:"td"},"address(0)")," if no token was created.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"voting"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The address of the voting component of the new DAO.")))),(0,o.kt)("h4",{id:"public-function-constructor"},"public function ",(0,o.kt)("inlineCode",{parentName:"h4"},"constructor")),(0,o.kt)("p",null,"The constructor setting the registry and token factory address and creating the base contracts for the factory to clone from."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"constructor(contract DAORegistry _registry, contract TokenFactory _tokenFactory) public \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_registry"),(0,o.kt)("td",{parentName:"tr",align:null},"contract DAORegistry"),(0,o.kt)("td",{parentName:"tr",align:null},"The DAO registry to register the DAO by its name.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_tokenFactory"),(0,o.kt)("td",{parentName:"tr",align:null},"contract TokenFactory"),(0,o.kt)("td",{parentName:"tr",align:null},"The token factory for optional governance token creation.")))),(0,o.kt)("h4",{id:"external-function-createerc20votingdao"},"external function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createERC20VotingDAO")),(0,o.kt)("p",null,"Creates a new DAO with the ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20Voting")," component installed and deploys a new ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," governance token if the corresponding configuration is passed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createERC20VotingDAO(struct DAOFactory.DAOConfig _daoConfig, struct DAOFactory.VoteConfig _voteConfig, struct TokenFactory.TokenConfig _tokenConfig, struct TokenFactory.MintConfig _mintConfig, address _trustedForwarder) external returns (contract DAO dao, contract ERC20Voting voting, contract ERC20VotesUpgradeable token, contract MerkleMinter minter) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_daoConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.DAOConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The name and metadata hash of the DAO.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_voteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.VoteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The configuration used to set up the the majority voting.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_tokenConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct TokenFactory.TokenConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The configuration used to create a new token.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_mintConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct TokenFactory.MintConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The configuration used to mint the newly created tokens.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_trustedForwarder"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The address of the trusted forwarder required for meta transactions.")))),(0,o.kt)("h4",{id:"external-function-createallowlistvotingdao"},"external function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createAllowlistVotingDAO")),(0,o.kt)("p",null,"Creates a new DAO with the ",(0,o.kt)("inlineCode",{parentName:"p"},"AllowlistVoting")," component installed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAllowlistVotingDAO(struct DAOFactory.DAOConfig _daoConfig, struct DAOFactory.VoteConfig _voteConfig, address[] _allowlistVoters, address _trustedForwarder) external returns (contract DAO dao, contract AllowlistVoting voting) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_daoConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.DAOConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The name and metadata hash of the DAO.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_voteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.VoteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The configuration used to set up the the majority voting.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_allowlistVoters"),(0,o.kt)("td",{parentName:"tr",align:null},"address[]"),(0,o.kt)("td",{parentName:"tr",align:null},"An array of addresses that are allowed to vote.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_trustedForwarder"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The address of the trusted forwarder required for meta transactions.")))),(0,o.kt)("h4",{id:"internal-function-createdao"},"internal function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createDAO")),(0,o.kt)("p",null,"Creates a new DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createDAO(struct DAOFactory.DAOConfig _daoConfig, address _trustedForwarder) internal returns (contract DAO dao) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_daoConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.DAOConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The name and metadata hash of the DAO it creates.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_trustedForwarder"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The forwarder address for the OpenGSN meta tx solution.")))),(0,o.kt)("h4",{id:"internal-function-setdaopermissions"},"internal function ",(0,o.kt)("inlineCode",{parentName:"h4"},"setDAOPermissions")),(0,o.kt)("p",null,"Sets the required permissions for the new DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function setDAOPermissions(contract DAO _dao, address _voting) internal \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_dao"),(0,o.kt)("td",{parentName:"tr",align:null},"contract DAO"),(0,o.kt)("td",{parentName:"tr",align:null},"The DAO instance just created.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_voting"),(0,o.kt)("td",{parentName:"tr",align:null},"address"),(0,o.kt)("td",{parentName:"tr",align:null},"The voting contract address (",(0,o.kt)("inlineCode",{parentName:"td"},"AllowlistVoting")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"ERC20Voting"),").")))),(0,o.kt)("h4",{id:"internal-function-createerc20voting"},"internal function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createERC20Voting")),(0,o.kt)("p",null,"Internal helper method to create and setup an ",(0,o.kt)("inlineCode",{parentName:"p"},"ERC20Voting")," contract for a DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createERC20Voting(contract DAO _dao, contract ERC20VotesUpgradeable _token, struct DAOFactory.VoteConfig _voteConfig) internal returns (contract ERC20Voting erc20Voting) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_dao"),(0,o.kt)("td",{parentName:"tr",align:null},"contract DAO"),(0,o.kt)("td",{parentName:"tr",align:null},"The associated DAO.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_token"),(0,o.kt)("td",{parentName:"tr",align:null},"contract ERC20VotesUpgradeable"),(0,o.kt)("td",{parentName:"tr",align:null},"The ",(0,o.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-20"},"ERC-20")," token address.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_voteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.VoteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The vote configuration.")))),(0,o.kt)("h4",{id:"internal-function-createallowlistvoting"},"internal function ",(0,o.kt)("inlineCode",{parentName:"h4"},"createAllowlistVoting")),(0,o.kt)("p",null,"Internal helper method to create and setup an ",(0,o.kt)("inlineCode",{parentName:"p"},"AllowlistVoting")," contract for a DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function createAllowlistVoting(contract DAO _dao, address[] _allowlistVoters, struct DAOFactory.VoteConfig _voteConfig) internal returns (contract AllowlistVoting allowlistVoting) \n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Input"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_dao"),(0,o.kt)("td",{parentName:"tr",align:null},"contract DAO"),(0,o.kt)("td",{parentName:"tr",align:null},"The associated DAO.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_allowlistVoters"),(0,o.kt)("td",{parentName:"tr",align:null},"address[]"),(0,o.kt)("td",{parentName:"tr",align:null},"The array of the allowed voting addresses.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"_voteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"struct DAOFactory.VoteConfig"),(0,o.kt)("td",{parentName:"tr",align:null},"The vote configuration.")))),(0,o.kt)("h4",{id:"private-function-setupbases"},"private function ",(0,o.kt)("inlineCode",{parentName:"h4"},"setupBases")),(0,o.kt)("p",null,"Internal helper method to set up the required base contracts on ",(0,o.kt)("inlineCode",{parentName:"p"},"DAOFactory")," deployment."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"function setupBases() private \n")))}m.isMDXComponent=!0}}]);